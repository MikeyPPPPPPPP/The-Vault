

key = """-----BEGIN PGP PUBLIC KEY BLOCK-----

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
vPwM70J5
=kKpG
-----END PGP PUBLIC KEY BLOCK-----"""




import pgpy
import re

pubkey, _ = pgpy.PGPKey.from_blob(key)
'''
text_message = pgpy.PGPMessage.new("This is a brand spankin' new message!")

encrypted_message = pubkey.encrypt(text_message)

r = re.match('-----BEGIN PGP MESSAGE-----.', str(encrypted_message))
#print(encrypted_message.message)

print(str(encrypted_message))
'''

password = "this is a test"

pub = """
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: Keybase OpenPGP v1.0.0
Comment: https://keybase.io/crypto

xo0EZFK4ZQEEANLUceL4DWnVH6amK3eMqhUcwHkuhDnfuvoKhSo7bgP+Hrq785SF
fow3bUsR4fhp6rJXRXJgIFk3VGDmam1YbqZCbDG7nXO/LOcUyYFnEDKFGUiIcJ4/
NxTSuWJYXDNw/7zNro575B1XLTsUCmKHRRM6ZKOQootqCdH/XSKYyx95ABEBAAHN
NG1pY2hhZWwgRGVuaXMgcHJvdmVuemFubyA8bWlrZXlwcm92ZW56YW5vQGdtYWls
LmNvbT7CrQQTAQoAFwUCZFK4ZQIbLwMLCQcDFQoIAh4BAheAAAoJEFQr0rwvyoI+
QmID/jxemGsbNp8y0n4hlsz2o+2Mlqr4XfX1S8SLj1WXIG//7RyNVnWhA4XgYmvL
J5VT7AzW1rzjXPWk08a66QJN3o0AeINEiISY9KNazSCwD0pl7Et6inQoz9Px5j+D
5KmZkj9yGL1rzIKmOYlIkmb+Ilpw2xYlVQbXnCUn3o8b+6tqzo0EZFK4ZQEEAKva
rnnYybAR2c7vtGKhsiZ0YtJJaCOmCaKIdCz02mJ0kbkxrzSQDcZPxzukAISmL6vm
2uxx009aPuuEtKHnJWtwjHVBAjpemlLzLCOMlxtsieomDLeWJDAkTSMRZ5siLs6E
4vA2GWGlURncp+da2fiWvppeXrf2wlhZenBNJIZhABEBAAHCwIMEGAEKAA8FAmRS
uGUFCQ8JnAACGy4AqAkQVCvSvC/Kgj6dIAQZAQoABgUCZFK4ZQAKCRAi+1EFNtn+
JOX8A/0dPG1TDElfFWvgBG9p9/K6AD+85Z0Cq8t6Dl9d7MiSQzX6D/IcuIoGJn4B
T+4lisyhJ7at4RA3iZ0JRuw/AD/RF/jzF8HDydH9PqmQPKXYSWrPod5LHDdlDwnc
gLsKQHWBhLRx9LcJEe8daGZ2YbZADS6JYHSU7yYpmq5MiUKtUVkYBAC5MY+ZzNwU
i5JvuFm/IDHXtRPKXeqbKPst9xrKk0YBAM1MDHiXt5Hp8Ey/Bhl9u7Nxa7qLbkTi
+Xe660TBAoO05OqmwI12CkKiHzTsDPbr2/VFi7PL5Z0IICqpOaFRWnHD/4yExO2b
FNtulahDieUq72gDOCNnrZv+K6JayssHXs6NBGRSuGUBBACvT+vqay48H6EmX1Jr
wq8+MHKwa3TuB/kHvjFh8afv9+lC/GdVxzMU3OZEon+Q+EdjbUjwujzjeiEk3R2N
9vsmm88nIJRoLVL2N+Ay2lvG7Wa3uSgW8RNm+VnYoK07idUID6kH2Rk1QvXiYrY4
ECTYMQ3zpDr5W3mx/4ikDr3kJwARAQABwsCDBBgBCgAPBQJkUrhlBQkPCZwAAhsu
AKgJEFQr0rwvyoI+nSAEGQEKAAYFAmRSuGUACgkQv0t1sLdBbIwp4QQAq5uplFQm
YHf0MhvSjnbRdW6lg5LE3t6UWvs7+1V+2ewSHrFcwWFbZvA02EU+sV17TmvuoVc2
+1qFkLUzJZY5FBZdGGnlgVi0KefkKlWprv8Edj1RWdKONz9YrP63Tr4Z4IECxxi0
6q6CLWppmlHEEQ403L165KTiCWhBILQSAy7oNgQAxL5JZqjhvIMgi0gAIkPGKhyO
NMqwe0MrIRTNVzTWscpFmPHFslTB1Rd3eEsJe2eoccMWEWTG8n/ItqxIgSszM2QI
aekNXHtEbyuH6NUnBi80hhZxH7+TPLS+FhqW6+ztjh2i0oXOQIcSIZTJ8t9I6Ew8
aQKw3x+X1NHM+8PEAyU=
=YlOb
-----END PGP PUBLIC KEY BLOCK-----"""

priv = """-----BEGIN PGP PRIVATE KEY BLOCK-----
Version: Keybase OpenPGP v1.0.0
Comment: https://keybase.io/crypto

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
=Do7m
-----END PGP PRIVATE KEY BLOCK-----
"""


pubkey, _ = pgpy.PGPKey.from_blob(pub)



text_message = pgpy.PGPMessage.new("This is a brand spankin' new message!")

encrypted_message = pubkey.encrypt(text_message)

r = re.match('-----BEGIN PGP MESSAGE-----.', str(encrypted_message))
#print(encrypted_message.message)

#print(type(encrypted_message))
#print(str(encrypted_message))

privkey, _ = pgpy.PGPKey.from_blob(priv)



c = """-----BEGIN PGP SIGNED MESSAGE-----
test
-----BEGIN PGP SIGNATURE-----

wrMEAAEKAB0FAmRTAzAWIQTW7RmATygRSvEMZKdUK9K8L8qCPgAKCRBUK9K8L8qC
Pu4LA/4zyvarOQJHw0rGlPq9n4oCGCjECc1sShVsOqa1jWTuoNIZPWGlSNVSlHrb
ftYllHdkZVOmN6bRygYWetVr6U3KVwCxK2sJBgdw8O9ni5iks46AHcaugi6xW9XC
julef0BX7RxE6VK3L0JNS8ytAsbVOtvol5LF2n/WD9qVqMO27Q==
=BRC5
-----END PGP SIGNATURE-----"""

with privkey.unlock("this is a test") as ukey:
    plaintext = ukey.decrypt(encrypted_message).message
    #print(plaintext)

    te = "test"
    s = ukey.sign(te)
    print("-----BEGIN PGP SIGNED MESSAGE-----\n"+te+"\n"+str(s))


    d = pgpy.PGPMessage.from_blob("-----BEGIN PGP SIGNED MESSAGE-----\n"+te+"\n"+str(s))

    a = pubkey.verify(d)#"test",s)
    print(bool(a))

